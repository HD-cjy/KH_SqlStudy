--04_SELECT(KH계정) - JOIN 실습문제 풀이.sql
--1. 70년대 생(1970~1979) 중 여자이면서 전씨인 사원의 이름과 주민번호, 부서 명, 직급 조회
--ORACLE
SELECT EMP_NAME
      ,EMP_NO
      ,DEPT_TITLE
      ,JOB_NAME
FROM EMPLOYEE E,DEPARTMENT,JOB J
WHERE DEPT_CODE = DEPT_ID
AND E.JOB_CODE = J.JOB_CODE
AND SUBSTR(EMP_NO,1,2) BETWEEN 70 AND 79
AND SUBSTR(EMP_NO,8,1) IN ('2','4')
AND EMP_NAME LIKE '전%';

--ANSI
SELECT EMP_NAME
      ,EMP_NO
      ,DEPT_TITLE
      ,JOB_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN JOB USING(JOB_CODE)
WHERE SUBSTR(EMP_NO,1,2) BETWEEN 70 AND 79
AND SUBSTR(EMP_NO,8,1) IN ('2','4')
AND EMP_NAME LIKE '전%';

--2. 나이 상 가장 막내의 사원 코드, 사원 명, 나이, 부서 명, 직급 명 조회
--나이 막내 사원 코드 찾기 
SELECT EMP_NAME,EMP_ID
FROM EMPLOYEE
ORDER BY EMP_NO DESC; -- 대북혼 215

--ORACLE 
SELECT EMP_ID
      ,EMP_NAME
      ,EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM TO_DATE(SUBSTR(EMP_NO,1,2),'RR')) 나이
      ,DEPT_TITLE
      ,JOB_NAME
FROM EMPLOYEE E,DEPARTMENT,JOB J
WHERE DEPT_CODE = DEPT_ID
AND E.JOB_CODE = J.JOB_CODE
AND EMP_NAME = '대북혼';

--ANSI
SELECT EMP_ID
      ,EMP_NAME
      ,EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM TO_DATE(SUBSTR(EMP_NO,1,2),'RR')) 나이
      ,DEPT_TITLE
      ,JOB_NAME
FROM EMPLOYEE 
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN JOB USING(JOB_CODE)
WHERE EMP_ID = '215';

--3. 이름에 ‘형’이 들어가는 사원의 사원 코드, 사원 명, 직급 조회
--ORACLE
SELECT EMP_ID
      ,EMP_NAME
      ,JOB_NAME
FROM EMPLOYEE E,JOB J
WHERE E.JOB_CODE = J.JOB_CODE
AND EMP_NAME LIKE '%형%';

--ANSI
SELECT EMP_ID
      ,EMP_NAME
      ,JOB_NAME
FROM EMPLOYEE 
JOIN JOB USING(JOB_CODE)
WHERE EMP_NAME LIKE '%형%';

--4. 부서코드가 D5이거나 D6인 사원의 사원 명, 직급 명, 부서 코드, 부서 명 조회
--ORACLE 
SELECT EMP_NAME
      ,JOB_NAME
      ,DEPT_CODE
      ,DEPT_TITLE
FROM EMPLOYEE E,DEPARTMENT,JOB J
WHERE DEPT_CODE= DEPT_ID
AND E.JOB_CODE =J.JOB_CODE
AND DEPT_CODE IN ('D5','D6');

--ANSI
SELECT EMP_NAME
      ,JOB_NAME
      ,DEPT_CODE
      ,DEPT_TITLE
FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN JOB USING (JOB_CODE)
WHERE DEPT_CODE IN ('D5','D6');

--5. 보너스를 받는 사원의 사원 명, 부서 명, 지역 명 조회
--ORACLE
SELECT EMP_NAME
      ,DEPT_TITLE
      ,LOCAL_NAME
FROM EMPLOYEE,DEPARTMENT,LOCATION
WHERE DEPT_CODE = DEPT_ID
AND LOCATION_ID = LOCAL_CODE
AND BONUS IS NOT NULL;

--ANSI
SELECT EMP_NAME
      ,DEPT_TITLE
      ,LOCAL_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE)
WHERE BONUS IS NOT NULL;

--6. 사원 명, 직급 명, 부서 명, 지역 명 조회
--ORACLE
SELECT EMP_NAME
      ,JOB_NAME
      ,DEPT_TITLE
      ,LOCAL_NAME
FROM EMPLOYEE E,DEPARTMENT,JOB J,LOCATION
WHERE DEPT_CODE = DEPT_ID
AND E.JOB_CODE = J.JOB_CODE
AND LOCATION_ID = LOCAL_CODE;

--ANSI
SELECT EMP_NAME
      ,JOB_NAME
      ,DEPT_TITLE
      ,LOCAL_NAME
FROM EMPLOYEE 
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN JOB USING(JOB_CODE)
JOIN LOCATION ON (LOCAL_CODE = LOCATION_ID);
--7. 한국이나 일본에서 근무 중인 사원의 사원 명, 부서 명, 지역 명, 국가 명 조회
--ORACLE
SELECT EMP_NAME
      ,DEPT_TITLE
      ,LOCAL_NAME
      ,NATIONAL_NAME
FROM EMPLOYEE,DEPARTMENT,LOCATION L,NATIONAL N
WHERE DEPT_CODE = DEPT_ID
AND LOCATION_ID = LOCAL_CODE
AND L.NATIONAL_CODE = N.NATIONAL_CODE
AND NATIONAL_NAME IN ('한국','일본');

--ANSI
SELECT EMP_NAME
      ,DEPT_TITLE
      ,LOCAL_NAME
      ,NATIONAL_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE)
JOIN NATIONAL USING(NATIONAL_CODE)
WHERE NATIONAL_NAME IN ('한국','일본');

--8. 한 사원과 같은 부서에서 일하는 사원의 이름 조회
--ORACLE 
SELECT E.EMP_NAME
      ,E.DEPT_CODE
      ,O.EMP_NAME
FROM EMPLOYEE E, EMPLOYEE O
WHERE E.DEPT_CODE = O.DEPT_CODE
AND E.EMP_NAME != O.EMP_NAME
ORDER BY 1;

--ANSI
SELECT E.EMP_NAME
      ,E.DEPT_CODE
      ,O.EMP_NAME
FROM EMPLOYEE E
JOIN EMPLOYEE O ON (E.DEPT_CODE = O.DEPT_CODE)
WHERE E.EMP_NAME != O.EMP_NAME
ORDER BY 1;
--9. 보너스가 없고 직급 코드가 J4이거나 J7인 사원의 이름, 직급 명, 급여 조회(NVL 이용)
--ORACLE 
SELECT EMP_NAME
      ,JOB_NAME
      ,SALARY
FROM EMPLOYEE E,JOB J
WHERE E.JOB_CODE = J.JOB_CODE
AND E.JOB_CODE IN ('J4','J7')
AND BONUS IS NULL;

--ANSI
SELECT EMP_NAME
      ,JOB_NAME
      ,SALARY
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
WHERE JOB_CODE IN('J4','J7')
AND BONUS IS NULL;


